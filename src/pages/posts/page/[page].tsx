import Head from "next/head";
import {
  getAllPosts,
  getNumberOfPages,
  getPostsByPage,
  getPostsForTopPage,
} from "lib/notionAPI";
import SinglePost from "components/Post/SinglePost";
import { GetStaticPaths, GetStaticProps } from "next";
import Pagination from "components/Pagination";

export const getStaticPaths: GetStaticPaths = async () => {
  const numberOfPage = await getNumberOfPages();

  let params = [];
  for (let i = 1; i <= numberOfPage; i++) {
    params.push({ params: { page: i.toString() } });
  }
  return {
    paths: params,
    fallback: "blocking",
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  const currentPage = context.params?.page?.toString() ?? "1";
  const postsByPage = await getPostsByPage(
    parseInt(currentPage.toString(), 10)
  );
  const numberOfPage = await getNumberOfPages();
  return {
    props: {
      postsByPage,
      numberOfPage,
    },
    revalidate: 60,
  };
};

const BlogPageList = ({ postsByPage, numberOfPage }: any) => {
  // console.log(allPosts);
  return (
    <div>
      <Head>
        <title>Atsushi-blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="style.css" href="/style.css/" />
      </Head>
      <main className="">
        <h1 className="title">Atsushi-blogðŸ–¥</h1>
        {postsByPage.map((post: any) => (
          <div key={post.id}>
            <SinglePost
              icon={post.icon}
              title={post.title}
              description={post.description}
              date={post.date}
              tags={post.tags}
              slug={post.slug}
              isPaginationPage={true}
            />
          </div>
        ))}
        <Pagination numberOfPage={numberOfPage} />
      </main>
    </div>
  );
};

export default BlogPageList;
